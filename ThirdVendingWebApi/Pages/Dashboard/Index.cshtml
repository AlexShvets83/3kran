    @page
@model ThirdVendingWebApi.Pages.Dashboard.IndexModel
@{
}

<style>
    #gridContainer .dx-toolbar .dx-texteditor {
        width: 100% !important;
    }

    #gridContainer .dx-toolbar .dx-toolbar-after {
        padding-left: 0;
        width: 100% !important;
    }

    #gridContainer .dx-datagrid-search-panel {
        margin-left: 0;
    }
</style>
<!-- Модальное окно показа полного списка аварий и событий -->
<div class="modal" tabindex="-1" role="dialog" id="alertsPopup">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="popupTitle"><i class="fa fa-exclamation-triangle text-warning"></i>&nbsp;&nbsp;Аварии за период</h4>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <input type="text" class="form-control" id="dateRangePicker">
                </div>

                @*<div id="dateRangePicker"></div>*@
                <small class="form-text text-muted">
                    Задайте календарный диапазон
                </small>

                <div id="gridAlerts"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" (click)="openDownloadFileDialog()">
                    <i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp;&nbsp;Экспорт
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clear()">
                    <i class="fa fa-times"></i>&nbsp;&nbsp;Закрыть
                </button>
            </div>

        </div>
    </div>
</div>





<div id="popup"></div>

<div class="row dashboard">
    <section class="col-12 col-lg-4 order-lg-1 left" style="height: 650px">
        <div id="gridContainer"></div>
        @*<div> <br /></div>*@
        <br />
        <div class="row">
            <div class="col">
                <span data-toggle="tooltip" data-placement="left" title="Обновить информацию">
                    <button onclick="updatePage()"
                            class="btn btn-info btn-sm mb-3">
                        <i class="fa fa-refresh"></i>&nbsp;&nbsp;Обновить
                    </button>
                </span>
            </div>

            <!-- Кнопка вызова окна добавления автомата -->

            <div class="col" align="right">
                <span data-toggle="tooltip" data-placement="left" title="Добавить (зарегистрировать) автомат">
                    <button onclick="addDevice(null)"
                            class="btn btn-primary btn-sm mb-3" data-toggle="modal"
                            data-target="#popupContainer">
                        <i class="fa fa-plus-square"></i>&nbsp;&nbsp;Добавить автомат
                    </button>
                </span>
            </div>
        </div>
    </section>













    <!-- Правая колонка -->
    <section class="col-12 col-lg-8 order-lg-2 right">
        <!-- Вложенная сетка 1 -->
        <div class="row">
            <!-- Шапка автомата -->
            <div class="col-sm-3">
                <div id="strId" class="dashboard_header-device_id badge-info lead rounded text-center">
                    ID:
                </div>
            </div>
            <div id="strAddress" class="col-sm-5 dashboard_header-device_address"></div>
            <div class="col-sm-4 d-flex btn-group text-white"
                 [ngSwitch]="getSingleAlert(selected)">
                <span *ngSwitchCase="alertTypes.NO_LINK" class="btn btn-danger flex-grow-1 disabled dashboard_header-device_status">
                    <i class="fa fa-exclamation-triangle"></i>&nbsp;Нет связи
                </span>
                <span *ngSwitchCase="alertTypes.TANK_EMPTY" style="display: none" class="btn btn-danger flex-grow-1 disabled dashboard_header-device_status">
                    <i class="fa fa-exclamation-triangle"></i>&nbsp;Бак пуст
                </span>
                <span *ngSwitchCase="alertTypes.NO_SALES" style="display: none" class="btn btn-warning flex-grow-1 disabled dashboard_header-device_status">
                    <i class="fa fa-exclamation-triangle"></i>&nbsp;Нет продаж<br>
                    @*<small *ngIf="selected.lastCleanerStatus">
                            {{cleanerStateToString(selected.lastCleanerStatus.status)}}
                        </small>*@
                </span>
                <span *ngSwitchDefault style="display: none" class="btn btn-success flex-grow-1 disabled dashboard_header-device_status">
                    <i class="fa fa-check"></i>&nbsp;В работе<br>
                    @*<small *ngIf="selected.lastCleanerStatus">
                            {{cleanerStateToString(selected.lastCleanerStatus.status)}}
                        </small>*@
                </span>

                <!-- Кнопка вызова окна редактирования данных автомата -->
                <!-- Example single danger button -->
                <div class="btn-group">
                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fa fa-pencil-square-o"></i>&nbsp;&nbsp;Редактировать
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#popupContainer" onclick="addDevice(device)"><i class="fa fa-list-ul"></i>&nbsp;&nbsp;Профиль</a>
                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#popupDevSettings" onclick="devSettings(device)"><i class="fa fa-wrench"></i>&nbsp;&nbsp;Техн. настройки</a>
                    </div>
                </div>
            </div>
        </div>
        <hr>
        <!-- График динамики продаж (начало) -->
        <h4 class="mt-2"><i class="fa fa-bar-chart-o text-warning"></i>&nbsp;&nbsp;Динамика продаж</h4>
        <div class="row">
            <div class="col-12 col-md-9 col-xl-8 mt-2">
                <canvas baseChart height="100%"
                        [datasets]="chartData"
                        [labels]="chartLabels"
                        [options]="chartOptions"
                        [colors]="chartColors"
                        [legend]="chartLegend"
                        [chartType]="chartType">
                </canvas>
            </div>
            <div class="col-12 col-md-3 col-xl-4 mt-2">
                <div class="col dashboard_graph-legend">
                    <div class="dashboard_graph-legend_item">
                        <span class="dashboard_graph-legend_money"><i class="fa fa-square"></i></span>
                        <span>Выручка:</span>
                        <span class="lead text-white bg-success rounded pb-1 pl-3 pr-3" id="totalMoney">
                        </span>
                    </div>
                    <div class="dashboard_graph-legend_item">
                        <span class="dashboard_graph-legend_sold"><i class="fa fa-square"></i></span>
                        <span>Продано:</span>
                        <span id="totalSold"></span>
                    </div>
                </div>
                <!-- Кнопки по периодам -->
                <div class="col dashboard_graph-term_selector btn-group btn-group-toggle" data-toggle="buttons">
                    <label class="btn btn-outline-secondary dashboard_graph-term_button">
                        <input type="radio" onchange="periodChange(this)" value="DAYS"><i class="fa fa-calendar-check-o"></i>&nbsp;День
                    </label>
                    <label class="btn btn-outline-secondary dashboard_graph-term_button active">
                        <input type="radio" onchange="periodChange(this)" value="MONTHS" checked><i class="fa fa-moon-o"></i>&nbsp;Месяц
                    </label>
                    <label class="btn btn-outline-secondary dashboard_graph-term_button">
                        <input type="radio" onchange="periodChange(this)" value="YEARS"><i class="fa fa-calendar"></i>&nbsp;Год
                    </label>
                </div>

                <div class="p-3">
                    <info-badge *ngIf="selected.lastCleanerStatus"
                                [info]="makeDeviceInfo('tds', selected.lastCleanerStatus.tds, 0)">
                    </info-badge>
                    <info-badge *ngIf="selected.lastStatus && selected.lastStatus.temperature && selected.lastStatus.temperature != 999.0"
                                [info]="makeDeviceInfo('temperature', selected.lastStatus.temperature, 1)">
                    </info-badge>
                    <info-badge *ngFor="let info of selected.info" [info]="info"></info-badge>
                </div>
                <!-- Деньги/литры -->
            </div>
        </div>
        <!-- График динамики продаж (конец) -->
        

        <!-- Вложенная сетка 2 -->
        <!-- Клонка для списка продаж -->
        <div class="row small">
            <div class="col-12 col-sm-6 col-xl-4 mt-2">
                <div class="dashboard-short_list_header"><i class="fa fa-shopping-cart text-warning"></i>&nbsp;&nbsp;Продажи</div>

                <div class="dashboard-short_list_body">
                    <!-- Список последних продаж -->
                    <!-- Информер по типу операции -->
                    <div class="form-check form-check-inline">
                        <label class="form-check-label" for="saleCash">
                            <i class="fa fa-money text-success" id="saleCash"></i>&nbsp;Наличн.
                        </label>
                    </div>
                    <div class="form-check-inline">
                        <label class="form-check-label" for="saleCashless">
                            <i class="fa fa-credit-card text-warning text-center" id="saleCashless"></i>&nbsp;Картой
                        </label>
                    </div>
                    <div class="form-check-inline">
                        <label class="form-check-label" for="saleDepo">
                            <i class="fa fa-cloud-upload text-danger text-center" id="saleDepo"></i>&nbsp;Пополн.
                        </label>
                    </div>
                    
                    @*<div class="text-center">
                        <i class="fa fa-money text-success" id="saleCash"></i>&nbsp;Наличн.
                        <i class="fa fa-credit-card text-warning text-center" id="saleCashless"></i>&nbsp;Картой
                        <i class="fa fa-cloud-upload text-danger text-center" id="saleDepo"></i>&nbsp;Пополн.
                    </div>*@
                    <hr>
                    <div class="dashboard-sales_wrapper">
                        <div id="tbSales"></div>
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                    </div>
                    <span data-toggle="tooltip" data-placement="top" title="Показать весь список продаж"> @*placement="top" ngbTooltip="Показать весь список продаж">*@
                        <button class="btn btn-primary btn-sm mt-3 mb-2" type="button" onclick="popupSales()">
                            <i class="fa fa-arrows-v"></i>&nbsp;Показать все
                        </button>
                    </span>
                </div>
            </div>

            <!-- Колонка для списка инкассаций -->
            <div class="col-12 col-sm-6 col-xl-4 mt-2">
                <div class="dashboard-short_list_header">
                    <i class="fa fa-truck text-warning"></i>&nbsp;&nbsp;Инкассации
                </div>
                <div class="dashboard-short_list_body">
                    <!-- Список последних инкассаций -->
                    <!-- Информер -->
                    <div class="text-center">
                        <i class="fa fa-money text-success"></i>&nbsp;Купюрами&nbsp;/&nbsp;<i class="fa fa-database text-warning"></i>&nbsp;Монетами
                    </div>
                    <hr>
                    <div class="dashboard-sales_wrapper">
                        <div id="tbEncash"></div>
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                    </div>
                    <!--&lt;!&ndash; Кнопка вызова модального окна с полным списком инкассаций &ndash;&gt;-->
                    <span placement="top" ngbTooltip="Показать весь список инкассаций">
                        <button class="btn btn-primary btn-sm mt-3 mb-2" type="button" onclick="popupEncash()">
                            <i class="fa fa-arrows-v"></i>&nbsp;Показать все
                        </button>
                    </span>
                </div>

            </div>

            <!-- Колонка для списка аварий -->
            <div class="col-12  col-sm-6 col-xl-4 mt-2" style="height: 350px">
                <div class="dashboard-short_list_header"><i class="fa fa-exclamation-triangle text-warning"></i>&nbsp;&nbsp;Аварии</div>
                <div class="dashboard-short_list_body">
                    <!-- Список последних аварий -->
                    <!-- Информер -->
                    <div class="text-center">
                        <i class="fa fa-exclamation-triangle text-danger" aria-hidden="true"></i>&nbsp;Критично!&nbsp;&nbsp;&nbsp;<i class="fa fa-exclamation-triangle text-warning" aria-hidden="true"></i>&nbsp;Внимание!
                    </div>
                    <hr>
                    <div class="dashboard-sales_wrapper">
                        <div id="tbAlerts"></div>
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                    </div>
                    <span placement="top" ngbTooltip="Показать весь список аварий">
                        <button class="btn btn-primary btn-sm mt-3 mb-2" type="button" onclick="popupAlerts()">
                            <i class="fa fa-arrows-v"></i>&nbsp;Показать все
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </section>
</div>








    
<div class="modal" tabindex="-1" role="dialog" id="popupContainer">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title fa fa-list-ul text-secondary" id="headerAddDevice">&nbsp;&nbsp;Добавить (зарегистрировать) автомат</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="popupDevId" style="display: none" value=""></div>
                <div class="alert alert-danger" id="errors" style="display: none">
                    <i class="fa fa-warning" aria-hidden="true"></i>&nbsp;&nbsp;
                    <strong>Errors</strong>
                </div>
                <div id="deviceForm"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary fa fa-ban" data-dismiss="modal"> Отмена</button>
                <button type="button" id="btnAddDevice" class="btn btn-primary fa fa-plus-square" onclick="postDevice(event)"> Добавить</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="popupDevSettings">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title fa fa-wrench text-secondary">&nbsp;&nbsp;Технические настройки автомата</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @*<div class="alert alert-danger" id="errors" style="display: none">
                    <i class="fa fa-warning" aria-hidden="true"></i>&nbsp;&nbsp;
                    <strong>Errors</strong>
                </div>*@
                <div id="deviceSettingsForm"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary fa fa-ban" data-dismiss="modal"> Закрыть</button>
                @*<button type="button" id="btnSaveSetings" class="btn btn-primary fa fa-plus-square" onclick="saveSettings(event)"> Добавить</button>*@
            </div>
        </div>
    </div>
</div>    



    <script>
        var period = "MONTHS";
        var user;
        var device;
        var timeZones = [
            {
                value: 2,
                name: "UTC+02:00 Калининград"
            },
            {
                value: 3,
                name: "UTC+03:00 Москва"
            },
            {
                value: 4,
                name: "UTC+04:00 Самара"
            },
            {
                value: 5,
                name: "UTC+05:00 Екатеринбург"
            },
            {
                value: 6,
                name: "UTC+06:00 Омск"
            },
            {
                value: 7,
                name: "UTC+07:00 Красноярск"
            },
            {
                value: 8,
                name: "UTC+08:00 Иркутск"
            },
            {
                value: 9,
                name: "UTC+09:00 Якутск"
            },
            {
                value: 10,
                name: "UTC+10:00 Владивосток"
            },
            {
                value: 11,
                name: "UTC+11:00 Магадан"
            },
            {
                value: 12,
                name: "UTC+12:00 Камчатский край"
            }
        ];
        var currencies = [
            {
                value: "RUB",
                name: "Российский рубль"
            },
            {
                value: "KZT",
                name: "Казахстанский тенге"
            },
            {
                value: "AZN",
                name: "Азербайджанский манат"
            },
            {
                value: "UZS",
                name: "Узбекский сум"
            },
            {
                value: "BYR",
                name: "Белорусский рубль"
            }
        ];

        function updatePage() {
            updateDevicesList();
            if (device) updateDevice(device.id);
        }

        function updateDevicesList() {
            var dataGrid = $("#gridContainer").dxDataGrid('instance');
            if (!dataGrid) return;
            var focusedRowKey = dataGrid.option('focusedRowKey');

            $.getJSON("/api/devices", null) // пытаемся загрузить данные с сервера с помощью HTTP запроса методом GET
                .then(function(data) { // добавляем обработчик при удачном выполнении запроса
                    $("#gridContainer").dxDataGrid('instance').option('dataSource', data);

                    if (focusedRowKey) dataGrid.option("focusedRowKey", focusedRowKey);
                    else {
                        dataGrid.option("focusedRowKey", data[0].id);
                    }
                });
        }

        $(function() {

            const dataGrid = $("#gridContainer").dxDataGrid({
                //dataSource: dataS,
                showColumnLines: true,
                focusedRowEnabled: true,
                showRowLines: true,
                keyExpr: "id",
                //allowColumnResizing: true,
                //columnResizingMode: 'widget',
                columnAutoWidth: true,
                columnFixing: { enabled: true },
                cellHintEnabled: true,
                paging: { pageSize: 10 },
                pager: {
                    //showPageSizeSelector: true,
                    //allowedPageSizes: [10, 20, 30, 50, 100],
                    showInfo: true,
                    infoText: 'Страница {0} из {1} ({2} автоматов)'
                },
                //filterRow: {
                //    visible: true,
                //    applyFilter: "auto"
                //},
                //headerFilter: { visible: true },
                showBorders: true,
                wordWrapEnabled: true,
                selection: { mode: 'single' },
                //height: 800,
                hoverStateEnabled: true,
                @* "export": {
            ignoreExcelErrors: true,
                enabled: true,
                    fileName: document.title,
                        allowExportSelectedData: false,
                            texts: {
                exportAll: '@Localizer["ExportAll"]',
                    exportSelectedRows: '@Localizer["Export selected rows"]',
                        exportTo: '@Localizer["Export"]'
            }
        },*@
                loadPanel: { enabled: true },
                searchPanel: {
                    visible: true,
                    highlightCaseSensitive: true,
                    placeholder: "Начните вводить адрес автомата или IMEI...",
                    width: '100%'
                },
                onFocusedRowChanging: function(e) {
                    var rowsCount = e.component.getVisibleRows().length;
                    const pageCount = e.component.pageCount();
                    const pageIndex = e.component.pageIndex();
                    const key = e.event && e.event.key;

                    if(key && e.prevRowIndex === e.newRowIndex) {
                        if(e.newRowIndex === rowsCount - 1 && pageIndex < pageCount - 1) {
                            e.component.pageIndex(pageIndex + 1).done(function() {
                                e.component.option("focusedRowIndex", 0);
                            });
                        } else if(e.newRowIndex === 0 && pageIndex > 0) {
                            e.component.pageIndex(pageIndex - 1).done(function() {
                                e.component.option("focusedRowIndex", rowsCount - 1);
                            });
                        }
                    }
                },
                onFocusedRowChanged: function(e) {
                    device = e.row && e.row.data;
                    if (device) {
                        document.getElementById("strId").innerText = `ID: ${device.imei}`;
                        document.getElementById("strAddress").innerText = device.address;

                        updateDevice(device.id);
                        //todo get device data and fill page
                    }
                },
                onCellPrepared: function(options) {
                    const fieldData = options.value;
                    var fieldHtml = "";
                    const column = options.column;
                    if (options.rowType === "data" && column.dataField === "alerts") {
                        var dev = options.data;
                        fieldHtml = '<i class="fa fa-check text-success"></i> В работе';
                        if (dev.alerts && (jQuery.inArray("NO_SALES", dev.alerts) !== -1)) fieldHtml = '<i class="fa fa-exclamation-triangle text-danger"></i> Нет продаж';

                        if (!dev.lastStatus || (dev.alerts && (jQuery.inArray("NO_LINK", dev.alerts) !== -1))) fieldHtml = '<i class="fa fa-exclamation-triangle text-danger"></i> Нет связи';

                        if (dev.alerts && (jQuery.inArray("TANK_EMPTY", dev.alerts) !== -1)) fieldHtml = '<i class="fa fa-exclamation-triangle text-danger"></i> Бак пуст';
                        options.cellElement.html(fieldHtml);
                    }
                },
                columns: [
                    {
                        dataField: "imei",
                        allowSorting: false,
                        caption: "IMEI",
                        headerCellTemplate: function(header, info) {
                            $('<b style="color: black">')
                                .html(info.column.caption)
                                .css('font-size', '14px')
                                .appendTo(header);
                        }
                    },
                    {
                        allowSorting: false,
                        dataField: "address",
                        caption: "Адрес автомата",
                        dataType: "string",
                        headerCellTemplate: function(header, info) {
                            $('<b style="color: black">')
                                .html(info.column.caption)
                                .css('font-size', '14px')
                                .appendTo(header);
                        }
                    },
                    {
                        allowSorting: false,
                        dataField: "alerts",
                        caption: "Состояние",
                        headerCellTemplate: function(header, info) {
                            $('<b style="color: black">')
                                .html(info.column.caption)
                                .css('font-size', '14px')
                                .appendTo(header);
                        },
                        //cellTemplate: function(element, info) {
                        //    if (!info.text)
                        //        element.append('<div>' + "Error" + '</div>').css("fa fa - exclamation - triangle text - danger");
                        //           // .css("color", "blue").css("class", "fa fa - exclamation - triangle text - danger");
                        //}
                    },
                    {
                        width: 30,
                        minWidth: 30,
                        headerCellTemplate: function(header, info) {
                            $('<b style="color: black">')
                                .html(info.column.caption)
                                .css('font-size', '14px')
                                .appendTo(header);
                        },
                        type: "buttons",
                        buttons: [
                            {
                                hint: "Удалить",
                                //icon: "fa fa-window-close",
                                cssClass: "fa fa-window-close text-danger",
                                //visible: function(e) {
                                //    return !e.row.isEditing && !isChief(e.row.data.Position);
                                //},
                                onClick: function(e) {
                                    const row = e.row.data;
                                    const id = row.id;
                                    if (!id) return;

                                    DevExpress.ui.dialog.custom({
                                        title: `Удаление автомата ${row.imei}`,
                                        messageHtml: 'Вы уверены, что хотите удалить этот автомат из списка?',
                                        buttons: [
                                            {
                                                text: "Отмена",
                                                icon: 'fa fa-ban',
                                                onClick: function() {
                                                    return {
                                                        dialogResult: false
                                                        //buttonText: e.component.option("text"), /* ... */
                                                    }
                                                }
                                            },
                                            {
                                                text: "Удалить",
                                                type: "danger",
                                                icon: 'fa fa-remove',
                                                onClick: function() {
                                                    return {
                                                        dialogResult: true
                                                        //buttonText: e.component.option("text"), /* ... */
                                                    }
                                                }
                                            }
                                        ]
                                    }).show().done(function(dialogResult) {
                                        //todo delete device
                                        if (dialogResult) {
                                            $.deleteObj(`/api/device/${id}`).then(function() {
                                                    updateDevicesList();
                                                },
                                                function(res) {
                                                    updateDevicesList();
                                                });
                                            //updateDevicesList();
                                            return;
                                        }
                                    });
                                }
                            }
                        ]
                    }
                ]
            });
            updateDevicesList();
/*
 "locale": {
        "format": "MM/DD/YYYY",
        "separator": " - ",
        "applyLabel": "Apply",
        "cancelLabel": "Cancel",
        "fromLabel": "From",
        "toLabel": "To",
        "customRangeLabel": "Custom",
        "weekLabel": "W",
        "daysOfWeek": [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
        ],
        "monthNames": [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
        ],
        "firstDay": 1
    },
 */
            $('#dateRangePicker').daterangepicker({
                //singleDatePicker: true,
                "locale": {
                    "format": "DD.MM.YYYY",
                    "separator": " - ",
                    "applyLabel": "Применить",
                    "cancelLabel": "Отмена",
                    "fromLabel": "От",
                    "toLabel": "До",
                    "customRangeLabel": "Пользовательский",
                    "weekLabel": "Неделя",
                    "daysOfWeek": [
                        "Пн.",
                        "Вт.",
                        "Ср.",
                        "Чт.",
                        "Пт.",
                        "Сб.",
                        "Вс."
                    ],
                    "monthNames": [
                        "Январь",
                        "Февраль",
                        "Март",
                        "Апрель",
                        "Май",
                        "Июнь",
                        "Июль",
                        "Август",
                        "Сентябрь",
                        "Октябрь",
                        "Ноябрь",
                        "Декабрь"
                    ],
                    "firstDay": 1
                },

                endDate: moment().add(1, 'days'),
                startDate: moment().subtract(7, 'days')
            });

        });

        //function closePopup() {
        //    $('#alertsPopup').modal('hide');

        //}

        function popupSales(id, name) {
            const header = document.getElementById("popupTitle");
            header.innerHTML = '<i class="fa fa-shopping-cart text-warning"></i>&nbsp;&nbsp;Продажи за период';
            $('#alertsPopup').modal('toggle');
        }

        function popupEncash(id, name) {
            const header = document.getElementById("popupTitle");
            header.innerHTML = '<i class="fa fa-truck text-warning"></i>&nbsp;&nbsp;Инкассации за период';
            $('#alertsPopup').modal('toggle');
        }

        function popupAlerts(id, name) {
            const header = document.getElementById("popupTitle");
            header.innerHTML = '<i class="fa fa-exclamation-triangle text-warning"></i>&nbsp;&nbsp;Аварии за период';
            $('#alertsPopup').modal('toggle');
        }

        function addDevice(dev) {
            var isEdit = false;
            document.getElementById("errors").style.display = "none";
            if (dev) {
                isEdit = true;
                document.getElementById("headerAddDevice").innerHTML = " Профиль автомата";
                const btn = document.getElementById("btnAddDevice");
                btn.className = 'btn btn-primary fa fa-save';
                btn.innerText = ' Сохранить';
                document.getElementById("popupDevId").value = dev.id;
            }
            else {
                document.getElementById("popupDevId").value = null;
            }

            const form = $("#deviceForm").dxForm({
                //formData: dev,
                readOnly: false,
                showColonAfterLabel: true,
                labelLocation: "top",
                items: [
                    {
                        dataField: "imei",
                        editorType: "dxNumberBox",
                        label: {
                            text: "ID автомата",
                            visible: true
                        },
                        editorOptions: {
                            placeholder: "Введите ID автомата (15 цифр)",
                            mode: "number",
                            value: null,
                            readOnly: isEdit
                        },
                        validationRules: [
                            {
                                type: "required",
                                message: "Введите ID автомата (15 цифр)"
                            },
                            {
                                type: "stringLength",
                                min: 15,
                                message: "ID автомата должен быть не менее 15 цифр"
                            },
                            {
                                type: "stringLength",
                                max: 17,
                                message: "ID автомата не должен быть длиннее 17 цифр"
                            },
                            {
                                type: "async",
                                message: "ID автомата уже зарегистрирован.",
                                validationCallback: function (params) {
                                    if (isEdit) {
                                        var d = $.Deferred();
                                        setTimeout(function() {
                                            d.resolve(true);
                                        }, 1);
                                        return d.promise();
                                    }
                                    return checkImei(params.value);
                                }
                            }
                        ]
                    },
                    {
                        dataField: "address",
                        label: {
                            text: "Адрес",
                            visible: true
                        },
                        editorOptions: {
                            placeholder: "Адрес автомата",
                            value: null,
                        },
                        validationRules: [
                            {
                                type: "required",
                                message: "Нужно ввести адрес"
                            }
                        ]
                    },
                    {
                        dataField: "phone",
                        editorType: "dxTextBox",
                        label: {
                            text: "Телефон",
                            visible: true
                        },
                        editorOptions: {
                            placeholder: "Введите номер телефона",
                            value: null
                        },
                        validationRules: [
                            {
                                type: 'pattern',
                                pattern: '^\\d+$'
                            }
                        ]
                    },
                    {
                        dataField: "timeZone",
                        editorType: "dxSelectBox",
                        label: {
                            text: "Часовой пояс",
                            visible: true
                        },
                        editorOptions: {
                            dataSource: timeZones,
                            valueExpr: "value",
                            displayExpr: "name",
                            value: 2
                        }
                    },
                    {
                        dataField: "currency",
                        editorType: "dxSelectBox",
                        label: {
                            text: "Валюта",
                            visible: true
                        },
                        editorOptions: {
                            dataSource: currencies,
                            valueExpr: "value",
                            displayExpr: "name",
                            value: "RUB"
                        }
                    }
                ]
                //minColWidth: 300,
                //colCount: 2
            }).dxForm("instance");

            if (isEdit) {
                let editor = form.getEditor("imei");
                editor.option("value", Number(dev.imei));

                editor = form.getEditor("address");
                editor.option("value", dev.address);

                editor = form.getEditor("phone");
                editor.option("value", dev.phone);

                editor = form.getEditor("timeZone");
                editor.option("value", dev.timeZone);

                editor = form.getEditor("currency");
                editor.option("value", dev.currency);
            }
        }

        function devSettings(dev) {
            
        }
        var checkImei = function(value) {
            //return $.getJSON(`/api/validation/imei/${value}`, null).promise;
            const get = $.get(`/api/validation/imei/${value}`);
            return get.promise();
        }

        function postDevice(e) {
            document.getElementById("errors").style.display = "none";
            const valid = $('#deviceForm').dxForm('instance').validate();
            if (valid.isValid === false) return;

            const data = $('#deviceForm').dxForm('instance').option('formData');
            data.imei = `${data.imei}`;
            data.phone = `${data.phone}`;

            const dev = {
                imei: `${data.imei}`,
                address: data.address,
                phone: data.phone,
                timeZone: data.timeZone,
                currency: data.currency,
                ownerId: null
            }
            const id = document.getElementById("popupDevId").value;
            var request;
            if (id) {
                request = $.putJSON(`/api/device/${id}`, dev, null);

            } else {
                request = $.postJSON('/api/device', dev, null);
            }

            request.then(function() {
                    $('#popupContainer').modal('hide');
                    updateDevicesList();
                },
                function(res) {
                    if (res.readyState === 4 && res.status === 200) {
                        $('#popupContainer').modal('hide');
                        updateDevicesList();
                    } else {
                        const message = res.responseText ? res.responseText : `Error${res.status}`;
                        document.getElementById("errors").innerHTML = message;
                        document.getElementById("errors").style.display = "block";
                    }
                });
        }

        function updateDevice(id) {
            getSales(id);
            getEncashes(id);
            getAlerts(id);
            updateInfo();
        }

        function updateInfo() {
            const tm = document.getElementById("totalMoney");
            const ts = document.getElementById("totalSold");

            if (!device || !device.lastStatus) {
                tm.innerHTML = '';
                ts.innerHTML = '';
                return;
            }

            tm.innerHTML = `${device.lastStatus.totalMoney} ${getCurrencySign(device)}`;
            ts.innerHTML = `${device.lastStatus.totalSold} л.`;
        }
        function getAlerts(id) {
            $.getJSON(`/api/alerts?deviceId=${id}`, null)
                .then(function(data) {
                    if (data == null || data.count === 0) return;

                    var alertList = [];
                    data.forEach(function(h) {
                        var i = '';
                        const dd = $.format.date(h["messageDate"], "dd.MM HH:mm");
                        switch (h["codeType"]) {
                        case 0:
                            i = `<div><i class="fa fa-exclamation-triangle text-warning"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;Нет продаж</div>`;
                            break;
                        case -1:
                            i = `<div><i class="fa fa-exclamation-triangle text-danger"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;Нет связи</div>`;
                            break;
                        case -2:
                            i = `<div><i class="fa fa-exclamation-triangle text-danger"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;Бак пуст</div>`;
                            break;
                        }
                        alertList.push(i);
                    });
                    alertList.push('<br/>');
                    alertList.push('<br/>');
                    alertList.push('<br/>');
                    alertList.push('<br/>');
                    alertList.push('<br/>');
                    const header = document.getElementById("tbAlerts");
                    header.innerHTML = alertList.join("");
                });
        }

        function getSales(id) {
            $.getJSON(`/api/sales/info?deviceId=${id}`, null)
                .then(function(data) {
                    if (data == null || data.count === 0) return;

                    var salesList = [];
                    data.forEach(function(h) {
                        //todo add toltip
                        var i = '';
                        const dd = $.format.date(h["messageDate"], "dd.MM HH:mm");
                        const msg = h["quantity"] + "л./" + h["amount"] + getCurrencySign(device);

                        switch (h["paymentType"]) {
                        case 0:
                                i = `<div><i class="fa fa-money text-success"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;${msg}</div>`;
                            break;
                        case 1:
                                i = `<div><i class="fa fa-credit-card text-warning"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;${msg}</div>`;
                            break;
                        case -1:
                                i = `<div><i class="fa fa-cloud-upload text-danger"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;${data.amount}</div>`;
                            break;
                        }
                        salesList.push(i);
                    });
                    salesList.push('<br/>');
                    salesList.push('<br/>');
                    salesList.push('<br/>');
                    salesList.push('<br/>');
                    salesList.push('<br/>');
                    const header = document.getElementById("tbSales");
                    header.innerHTML = salesList.join("");
                });
        }

        function getEncashes(id) {
            $.getJSON(`/api/encash?deviceId=${id}`, null)
                .then(function (data) {
                    if (data == null || data.count === 0) return;

                    var encashList = [];
                    data.forEach(function (h) {
                        //todo add toltip
                        const dd = $.format.date(h["messageDate"], "dd.MM HH:mm");
                        var i = `<div><i class="fa fa-truck text-warning"></i>&nbsp;&nbsp;${dd}&nbsp;&ndash;&nbsp;${h["amount"]}${getCurrencySign(device)}</div>`;


                        encashList.push(i);
                    });

                    encashList.push('<br/>');
                    encashList.push('<br/>');
                    encashList.push('<br/>');
                    encashList.push('<br/>');
                    encashList.push('<br/>');
                    const header = document.getElementById("tbEncash");
                    header.innerHTML = encashList.join("");
                });
        }

        function getCurrencySign(device) {
            switch (device.currency) {
                case 'RUB':
                    return `&#x20BD;`;
                    return '₽';
                case 'KZT':
                    return '&#x20B8;';
                    return '₸';
                case 'AZN':
                    return '&#x20BC;';
                    return '₼';
                case 'UZS':
                    return 'сўм';
                case 'BYR':
                    return 'Br';
                    default :
                        return '';
            }
        }

        function periodChange(selectObject) {
            period = selectObject.value;
            //alert(period);
        }
</script>
